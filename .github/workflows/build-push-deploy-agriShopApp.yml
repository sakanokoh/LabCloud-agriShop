name: Build and Deploy Flask App

on:
  push:
    branches:
      - main

jobs:
  # Job 1: Build the Container Image
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: |
          docker build -t flask-agriapp:v1 .

  # Job 2: Host it to DockerHub
  push-to-dockerhub:
    runs-on: ubuntu-latest
    needs: build  # Dépend du job "build"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-agriapp:v1

  # Job 3: Deploy in a Cloud Serverless Container Service
  deploy:
    runs-on: ubuntu-latest
    needs: push-to-dockerhub  # Dépend du job "push-to-dockerhub"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure CLI
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} \
                      -p ${{ secrets.AZURE_CLIENT_SECRET }} \
                      --tenant ${{ secrets.AZURE_TENANT_ID }}
            az containerapp create \
              --name flask-agriapp \
              --resource-group flask-agriapp-rg \
              --environment agriapp-env \
              --image ${{ secrets.DOCKER_USERNAME }}/flask-agriapp:v1 \
              --target-port 5000 \
              --ingress external \
              --cpu 0.5 --memory 1.0Gi
